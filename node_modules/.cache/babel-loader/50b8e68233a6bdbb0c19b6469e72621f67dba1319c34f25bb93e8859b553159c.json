{"ast":null,"code":"import{useEffect,useMemo,useState}from\"react\";import Particles,{initParticlesEngine}from\"@tsparticles/react\";import{loadSlim}from\"@tsparticles/slim\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[init,setInit]=useState(false);useEffect(()=>{initParticlesEngine(async engine=>{await loadSlim(engine);}).then(()=>{setInit(true);});},[]);const particlesLoaded=container=>{console.log(container);};const options=useMemo(()=>({background:{color:{value:\"transparent\"}},fpsLimit:120,interactivity:{events:{onClick:{enable:false,mode:\"push\"},onHover:{enable:false,mode:\"repulse\"}},modes:{push:{quantity:4},repulse:{distance:200,duration:0.4}}},particles:{color:{value:\"#000\"},links:{color:\"#000\",distance:150,enable:true,opacity:0.2,width:1},move:{direction:\"none\",enable:true,outModes:{default:\"bounce\"},random:false,speed:.2,straight:false},number:{density:{enable:true},value:80},opacity:{value:0.4},shape:{type:\"circle\"},size:{value:{min:1,max:3}}},detectRetina:true}),[]);if(init){return/*#__PURE__*/_jsx(Particles,{id:\"tsparticles\",particlesLoaded:particlesLoaded,options:options});}return/*#__PURE__*/_jsx(_Fragment,{});};export default App;","map":{"version":3,"names":["useEffect","useMemo","useState","Particles","initParticlesEngine","loadSlim","jsx","_jsx","Fragment","_Fragment","App","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","shape","type","size","min","max","detectRetina","id"],"sources":["/Users/abolfaz/Downloads/my-project/src/Components/SnowEffect/SnowEffect.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { loadSlim } from \"@tsparticles/slim\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n  const options = useMemo(\n    () => ({\n      background: {\n        color: {\n          value: \"transparent\",\n        },\n      },\n      fpsLimit: 120,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: false,\n            mode: \"push\",\n          },\n          onHover: {\n            enable: false,\n            mode: \"repulse\",\n          },\n        },\n        modes: {\n          push: {\n            quantity: 4,\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4,\n          },\n        },\n      },\n      particles: {\n        color: {\n          value: \"#000\",\n        },\n        links: {\n          color: \"#000\",\n          distance: 150,\n          enable: true,\n          opacity: 0.2,\n          width: 1,\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\",\n          },\n          random: false,\n          speed: .2,\n          straight: false,\n        },\n        number: {\n          density: {\n            enable: true,\n          },\n          value: 80,\n        },\n        opacity: {\n          value: 0.4,\n        },\n        shape: {\n          type: \"circle\",\n        },\n        size: {\n          value: { min: 1, max: 3 },\n        },\n      },\n      detectRetina: true,\n    }),\n    []\n  );\n\n  if (init) {\n    return (\n      <Particles\n        id=\"tsparticles\"\n        particlesLoaded={particlesLoaded}\n        options={options}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nexport default App;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CACpD,MAAO,CAAAC,SAAS,EAAIC,mBAAmB,KAAQ,oBAAoB,CACnE,OAASC,QAAQ,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE7C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACvCF,SAAS,CAAC,IAAM,CACdI,mBAAmB,CAAC,KAAO,CAAAS,MAAM,EAAK,CACpC,KAAM,CAAAR,QAAQ,CAACQ,MAAM,CAAC,CACxB,CAAC,CAAC,CAACC,IAAI,CAAC,IAAM,CACZF,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,eAAe,CAAIC,SAAS,EAAK,CACrCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC,CACxB,CAAC,CAED,KAAM,CAAAG,OAAO,CAAGlB,OAAO,CACrB,KAAO,CACLmB,UAAU,CAAE,CACVC,KAAK,CAAE,CACLC,KAAK,CAAE,aACT,CACF,CAAC,CACDC,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,CACbC,MAAM,CAAE,CACNC,OAAO,CAAE,CACPC,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,MACR,CAAC,CACDC,OAAO,CAAE,CACPF,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,SACR,CACF,CAAC,CACDE,KAAK,CAAE,CACLC,IAAI,CAAE,CACJC,QAAQ,CAAE,CACZ,CAAC,CACDC,OAAO,CAAE,CACPC,QAAQ,CAAE,GAAG,CACbC,QAAQ,CAAE,GACZ,CACF,CACF,CAAC,CACDC,SAAS,CAAE,CACTf,KAAK,CAAE,CACLC,KAAK,CAAE,MACT,CAAC,CACDe,KAAK,CAAE,CACLhB,KAAK,CAAE,MAAM,CACba,QAAQ,CAAE,GAAG,CACbP,MAAM,CAAE,IAAI,CACZW,OAAO,CAAE,GAAG,CACZC,KAAK,CAAE,CACT,CAAC,CACDC,IAAI,CAAE,CACJC,SAAS,CAAE,MAAM,CACjBd,MAAM,CAAE,IAAI,CACZe,QAAQ,CAAE,CACRC,OAAO,CAAE,QACX,CAAC,CACDC,MAAM,CAAE,KAAK,CACbC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,KACZ,CAAC,CACDC,MAAM,CAAE,CACNC,OAAO,CAAE,CACPrB,MAAM,CAAE,IACV,CAAC,CACDL,KAAK,CAAE,EACT,CAAC,CACDgB,OAAO,CAAE,CACPhB,KAAK,CAAE,GACT,CAAC,CACD2B,KAAK,CAAE,CACLC,IAAI,CAAE,QACR,CAAC,CACDC,IAAI,CAAE,CACJ7B,KAAK,CAAE,CAAE8B,GAAG,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAE,CAC1B,CACF,CAAC,CACDC,YAAY,CAAE,IAChB,CAAC,CAAC,CACF,EACF,CAAC,CAED,GAAI3C,IAAI,CAAE,CACR,mBACEJ,IAAA,CAACJ,SAAS,EACRoD,EAAE,CAAC,aAAa,CAChBxC,eAAe,CAAEA,eAAgB,CACjCI,OAAO,CAAEA,OAAQ,CAClB,CAAC,CAEN,CAEA,mBAAOZ,IAAA,CAAAE,SAAA,GAAI,CAAC,CACd,CAAC,CAED,cAAe,CAAAC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}