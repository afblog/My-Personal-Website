{"ast":null,"code":"var _jsxFileName = \"/Users/abolfaz/Downloads/my-project/src/Components/Snow/Snow.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    background: {\n      color: {\n        value: \"transparent\"\n      }\n    },\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: false,\n          mode: \"push\"\n        },\n        onHover: {\n          enable: false,\n          mode: \"repulse\"\n        }\n      },\n      modes: {\n        push: {\n          quantity: 4\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: \"#e56\"\n      },\n      links: {\n        color: \"#000\",\n        distance: 150,\n        enable: false,\n        opacity: 0.2,\n        width: 1\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\"\n        },\n        random: false,\n        speed: 0.2,\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true\n        },\n        value: 80\n      },\n      opacity: {\n        value: 0.4\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 3\n        }\n      }\n    },\n    detectRetina: true\n  }), []);\n  if (init) {\n    return /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      particlesLoaded: particlesLoaded,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(App, \"eB+NWpxmGZSqHQDaTSx/Qv0E/5M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","Particles","initParticlesEngine","loadSlim","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","shape","type","size","min","max","detectRetina","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abolfaz/Downloads/my-project/src/Components/Snow/Snow.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { loadSlim } from \"@tsparticles/slim\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n  const options = useMemo(\n    () => ({\n      background: {\n        color: {\n          value: \"transparent\",\n        },\n      },\n      fpsLimit: 120,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: false,\n            mode: \"push\",\n          },\n          onHover: {\n            enable: false,\n            mode: \"repulse\",\n          },\n        },\n        modes: {\n          push: {\n            quantity: 4,\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4,\n          },\n        },\n      },\n      particles: {\n        color: {\n          value: \"#e56\",\n        },\n        links: {\n          color: \"#000\",\n          distance: 150,\n          enable: false,\n          opacity: 0.2,\n          width: 1,\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\",\n          },\n          random: false,\n          speed: 0.2,\n          straight: false,\n        },\n        number: {\n          density: {\n            enable: true,\n          },\n          value: 80,\n        },\n        opacity: {\n          value: 0.4,\n        },\n        shape: {\n          type: \"circle\",\n        },\n        size: {\n          value: { min: 1, max: 3 },\n        },\n      },\n      detectRetina: true,\n    }),\n    []\n  );\n\n  if (init) {\n    return (\n      <Particles\n        id=\"tsparticles\"\n        particlesLoaded={particlesLoaded}\n        options={options}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,SAAS,IAAIC,mBAAmB,QAAQ,oBAAoB;AACnE,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvCF,SAAS,CAAC,MAAM;IACdI,mBAAmB,CAAC,MAAOU,MAAM,IAAK;MACpC,MAAMT,QAAQ,CAACS,MAAM,CAAC;IACxB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACZF,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAIC,SAAS,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACxB,CAAC;EAED,MAAMG,OAAO,GAAGnB,OAAO,CACrB,OAAO;IACLoB,UAAU,EAAE;MACVC,KAAK,EAAE;QACLC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAE;MACbC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPC,MAAM,EAAE,KAAK;UACbC,IAAI,EAAE;QACR,CAAC;QACDC,OAAO,EAAE;UACPF,MAAM,EAAE,KAAK;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDE,KAAK,EAAE;QACLC,IAAI,EAAE;UACJC,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;UACPC,QAAQ,EAAE,GAAG;UACbC,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;IACDC,SAAS,EAAE;MACTf,KAAK,EAAE;QACLC,KAAK,EAAE;MACT,CAAC;MACDe,KAAK,EAAE;QACLhB,KAAK,EAAE,MAAM;QACba,QAAQ,EAAE,GAAG;QACbP,MAAM,EAAE,KAAK;QACbW,OAAO,EAAE,GAAG;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,IAAI,EAAE;QACJC,SAAS,EAAE,MAAM;QACjBd,MAAM,EAAE,IAAI;QACZe,QAAQ,EAAE;UACRC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE,GAAG;QACVC,QAAQ,EAAE;MACZ,CAAC;MACDC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPrB,MAAM,EAAE;QACV,CAAC;QACDL,KAAK,EAAE;MACT,CAAC;MACDgB,OAAO,EAAE;QACPhB,KAAK,EAAE;MACT,CAAC;MACD2B,KAAK,EAAE;QACLC,IAAI,EAAE;MACR,CAAC;MACDC,IAAI,EAAE;QACJ7B,KAAK,EAAE;UAAE8B,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE;MAC1B;IACF,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC,CAAC,EACF,EACF,CAAC;EAED,IAAI3C,IAAI,EAAE;IACR,oBACEL,OAAA,CAACJ,SAAS;MACRqD,EAAE,EAAC,aAAa;MAChBxC,eAAe,EAAEA,eAAgB;MACjCI,OAAO,EAAEA;IAAQ;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEN;EAEA,oBAAOrD,OAAA,CAAAE,SAAA,mBAAI,CAAC;AACd,CAAC;AAACE,EAAA,CAhGID,GAAG;AAAAmD,EAAA,GAAHnD,GAAG;AAkGT,eAAeA,GAAG;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}