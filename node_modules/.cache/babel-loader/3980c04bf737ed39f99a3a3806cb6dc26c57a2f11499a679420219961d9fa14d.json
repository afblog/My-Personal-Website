{"ast":null,"code":"import _objectWithoutProperties from \"/Users/abolfaz/Programming/ \\u0627\\u0653\\u0645\\u0648\\u0632\\u0634 \\u0647\\u0627/projects/AFblog/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"mode\"];\nimport { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange } from \"./NumberUtils.js\";\nimport { halfRandom, millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n  debug: console.debug,\n  error: console.error,\n  info: console.info,\n  log: console.log,\n  verbose: console.log,\n  warning: console.warn\n};\nexport function setLogger(logger) {\n  _logger.debug = logger.debug || _logger.debug;\n  _logger.error = logger.error || _logger.error;\n  _logger.info = logger.info || _logger.info;\n  _logger.log = logger.log || _logger.log;\n  _logger.verbose = logger.verbose || _logger.verbose;\n  _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n  return _logger;\n}\nfunction rectSideBounce(data) {\n  const res = {\n      bounced: false\n    },\n    {\n      pSide,\n      pOtherSide,\n      rectSide,\n      rectOtherSide,\n      velocity,\n      factor\n    } = data,\n    half = 0.5,\n    minVelocity = 0;\n  if (pOtherSide.min < rectOtherSide.min || pOtherSide.min > rectOtherSide.max || pOtherSide.max < rectOtherSide.min || pOtherSide.max > rectOtherSide.max) {\n    return res;\n  }\n  if (pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity || pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity) {\n    res.velocity = velocity * -factor;\n    res.bounced = true;\n  }\n  return res;\n}\nfunction checkSelector(element, selectors) {\n  const res = executeOnSingleOrMultiple(selectors, selector => {\n    return element.matches(selector);\n  });\n  return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n  return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n  return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n  if (!hasMatchMedia()) {\n    return;\n  }\n  return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n  if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n    return;\n  }\n  return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n  if (isSsr() || typeof MutationObserver === \"undefined\") {\n    return;\n  }\n  return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n  const invalidIndex = -1;\n  return value === array || isArray(array) && array.indexOf(value) > invalidIndex;\n}\nexport async function loadFont(font, weight) {\n  try {\n    await document.fonts.load(\"\".concat(weight !== null && weight !== void 0 ? weight : \"400\", \" 36px '\").concat(font !== null && font !== void 0 ? font : \"Verdana\", \"'\"));\n  } catch (_unused) {}\n}\nexport function arrayRandomIndex(array) {\n  return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n  const minRadius = 0;\n  return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n  let inside = true;\n  if (!direction || direction === OutModeDirection.bottom) {\n    inside = bounds.top < size.height + offset.x;\n  }\n  if (inside && (!direction || direction === OutModeDirection.left)) {\n    inside = bounds.right > offset.x;\n  }\n  if (inside && (!direction || direction === OutModeDirection.right)) {\n    inside = bounds.left < size.width + offset.y;\n  }\n  if (inside && (!direction || direction === OutModeDirection.top)) {\n    inside = bounds.bottom > offset.y;\n  }\n  return inside;\n}\nexport function calculateBounds(point, radius) {\n  return {\n    bottom: point.y + radius,\n    left: point.x - radius,\n    right: point.x + radius,\n    top: point.y - radius\n  };\n}\nexport function deepExtend(destination) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n  for (const source of sources) {\n    if (source === undefined || source === null) {\n      continue;\n    }\n    if (!isObject(source)) {\n      destination = source;\n      continue;\n    }\n    const sourceIsArray = Array.isArray(source);\n    if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n      destination = [];\n    } else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n      destination = {};\n    }\n    for (const key in source) {\n      if (key === \"__proto__\") {\n        continue;\n      }\n      const sourceDict = source,\n        value = sourceDict[key],\n        destDict = destination;\n      destDict[key] = isObject(value) && Array.isArray(value) ? value.map(v => deepExtend(destDict[key], v)) : deepExtend(destDict[key], value);\n    }\n  }\n  return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n  return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n  executeOnSingleOrMultiple(divs, div => {\n    const divMode = div.mode,\n      divEnabled = div.enable;\n    if (divEnabled && isInArray(mode, divMode)) {\n      singleDivModeExecute(div, callback);\n    }\n  });\n}\nexport function singleDivModeExecute(div, callback) {\n  const selectors = div.selectors;\n  executeOnSingleOrMultiple(selectors, selector => {\n    callback(selector, div);\n  });\n}\nexport function divMode(divs, element) {\n  if (!element || !divs) {\n    return;\n  }\n  return findItemFromSingleOrMultiple(divs, div => {\n    return checkSelector(element, div.selectors);\n  });\n}\nexport function circleBounceDataFromParticle(p) {\n  return {\n    position: p.getPosition(),\n    radius: p.getRadius(),\n    mass: p.getMass(),\n    velocity: p.velocity,\n    factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value))\n  };\n}\nexport function circleBounce(p1, p2) {\n  const {\n      x: xVelocityDiff,\n      y: yVelocityDiff\n    } = p1.velocity.sub(p2.velocity),\n    [pos1, pos2] = [p1.position, p2.position],\n    {\n      dx: xDist,\n      dy: yDist\n    } = getDistances(pos2, pos1),\n    minimumDistance = 0;\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n    return;\n  }\n  const angle = -Math.atan2(yDist, xDist),\n    m1 = p1.mass,\n    m2 = p2.mass,\n    u1 = p1.velocity.rotate(angle),\n    u2 = p2.velocity.rotate(angle),\n    v1 = collisionVelocity(u1, u2, m1, m2),\n    v2 = collisionVelocity(u2, u1, m1, m2),\n    vFinal1 = v1.rotate(-angle),\n    vFinal2 = v2.rotate(-angle);\n  p1.velocity.x = vFinal1.x * p1.factor.x;\n  p1.velocity.y = vFinal1.y * p1.factor.y;\n  p2.velocity.x = vFinal2.x * p2.factor.x;\n  p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n  const pPos = particle.getPosition(),\n    size = particle.getRadius(),\n    bounds = calculateBounds(pPos, size),\n    bounceOptions = particle.options.bounce,\n    resH = rectSideBounce({\n      pSide: {\n        min: bounds.left,\n        max: bounds.right\n      },\n      pOtherSide: {\n        min: bounds.top,\n        max: bounds.bottom\n      },\n      rectSide: {\n        min: divBounds.left,\n        max: divBounds.right\n      },\n      rectOtherSide: {\n        min: divBounds.top,\n        max: divBounds.bottom\n      },\n      velocity: particle.velocity.x,\n      factor: getRangeValue(bounceOptions.horizontal.value)\n    });\n  if (resH.bounced) {\n    if (resH.velocity !== undefined) {\n      particle.velocity.x = resH.velocity;\n    }\n    if (resH.position !== undefined) {\n      particle.position.x = resH.position;\n    }\n  }\n  const resV = rectSideBounce({\n    pSide: {\n      min: bounds.top,\n      max: bounds.bottom\n    },\n    pOtherSide: {\n      min: bounds.left,\n      max: bounds.right\n    },\n    rectSide: {\n      min: divBounds.top,\n      max: divBounds.bottom\n    },\n    rectOtherSide: {\n      min: divBounds.left,\n      max: divBounds.right\n    },\n    velocity: particle.velocity.y,\n    factor: getRangeValue(bounceOptions.vertical.value)\n  });\n  if (resV.bounced) {\n    if (resV.velocity !== undefined) {\n      particle.velocity.y = resV.velocity;\n    }\n    if (resV.position !== undefined) {\n      particle.position.y = resV.position;\n    }\n  }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n  const defaultIndex = 0;\n  return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n  return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n  if (isArray(obj)) {\n    return obj.find((t, index) => callback(t, index));\n  }\n  const defaultIndex = 0;\n  return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n  const valueRange = options.value,\n    animationOptions = options.animation,\n    res = {\n      delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n      enable: animationOptions.enable,\n      value: getRangeValue(options.value) * pxRatio,\n      max: getRangeMax(valueRange) * pxRatio,\n      min: getRangeMin(valueRange) * pxRatio,\n      loops: 0,\n      maxLoops: getRangeValue(animationOptions.count),\n      time: 0\n    },\n    decayOffset = 1;\n  if (animationOptions.enable) {\n    res.decay = decayOffset - getRangeValue(animationOptions.decay);\n    switch (animationOptions.mode) {\n      case AnimationMode.increase:\n        res.status = AnimationStatus.increasing;\n        break;\n      case AnimationMode.decrease:\n        res.status = AnimationStatus.decreasing;\n        break;\n      case AnimationMode.random:\n        res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n        break;\n    }\n    const autoStatus = animationOptions.mode === AnimationMode.auto;\n    switch (animationOptions.startValue) {\n      case StartValueType.min:\n        res.value = res.min;\n        if (autoStatus) {\n          res.status = AnimationStatus.increasing;\n        }\n        break;\n      case StartValueType.max:\n        res.value = res.max;\n        if (autoStatus) {\n          res.status = AnimationStatus.decreasing;\n        }\n        break;\n      case StartValueType.random:\n      default:\n        res.value = randomInRange(res);\n        if (autoStatus) {\n          res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n        }\n        break;\n    }\n  }\n  res.initialValue = res.value;\n  return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n  const isPercent = positionOrSize.mode === PixelMode.percent;\n  if (!isPercent) {\n    const {\n        mode: _\n      } = positionOrSize,\n      rest = _objectWithoutProperties(positionOrSize, _excluded);\n    return rest;\n  }\n  const isPosition = \"x\" in positionOrSize;\n  if (isPosition) {\n    return {\n      x: positionOrSize.x / percentDenominator * canvasSize.width,\n      y: positionOrSize.y / percentDenominator * canvasSize.height\n    };\n  } else {\n    return {\n      width: positionOrSize.width / percentDenominator * canvasSize.width,\n      height: positionOrSize.height / percentDenominator * canvasSize.height\n    };\n  }\n}\nexport function getPosition(position, canvasSize) {\n  return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n  return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n  switch (destroyType) {\n    case DestroyType.max:\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n      break;\n    case DestroyType.min:\n      if (value <= minValue) {\n        particle.destroy();\n      }\n      break;\n  }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n  var _data$maxLoops, _data$loops, _data$maxLoops2, _data$velocity, _data$decay, _data$delayTime, _data$delayTime2, _data$delayTime3, _data$delayTime4;\n  const minLoops = 0,\n    minDelay = 0,\n    identity = 1,\n    minVelocity = 0,\n    minDecay = 1;\n  if (particle.destroyed || !data || !data.enable || ((_data$maxLoops = data.maxLoops) !== null && _data$maxLoops !== void 0 ? _data$maxLoops : minLoops) > minLoops && ((_data$loops = data.loops) !== null && _data$loops !== void 0 ? _data$loops : minLoops) > ((_data$maxLoops2 = data.maxLoops) !== null && _data$maxLoops2 !== void 0 ? _data$maxLoops2 : minLoops)) {\n    return;\n  }\n  const velocity = ((_data$velocity = data.velocity) !== null && _data$velocity !== void 0 ? _data$velocity : minVelocity) * delta.factor,\n    minValue = data.min,\n    maxValue = data.max,\n    decay = (_data$decay = data.decay) !== null && _data$decay !== void 0 ? _data$decay : minDecay;\n  if (!data.time) {\n    data.time = 0;\n  }\n  if (((_data$delayTime = data.delayTime) !== null && _data$delayTime !== void 0 ? _data$delayTime : minDelay) > minDelay && data.time < ((_data$delayTime2 = data.delayTime) !== null && _data$delayTime2 !== void 0 ? _data$delayTime2 : minDelay)) {\n    data.time += delta.value;\n  }\n  if (((_data$delayTime3 = data.delayTime) !== null && _data$delayTime3 !== void 0 ? _data$delayTime3 : minDelay) > minDelay && data.time < ((_data$delayTime4 = data.delayTime) !== null && _data$delayTime4 !== void 0 ? _data$delayTime4 : minDelay)) {\n    return;\n  }\n  switch (data.status) {\n    case AnimationStatus.increasing:\n      if (data.value >= maxValue) {\n        if (changeDirection) {\n          data.status = AnimationStatus.decreasing;\n        } else {\n          data.value -= maxValue;\n        }\n        if (!data.loops) {\n          data.loops = minLoops;\n        }\n        data.loops++;\n      } else {\n        data.value += velocity;\n      }\n      break;\n    case AnimationStatus.decreasing:\n      if (data.value <= minValue) {\n        if (changeDirection) {\n          data.status = AnimationStatus.increasing;\n        } else {\n          data.value += maxValue;\n        }\n        if (!data.loops) {\n          data.loops = minLoops;\n        }\n        data.loops++;\n      } else {\n        data.value -= velocity;\n      }\n  }\n  if (data.velocity && decay !== identity) {\n    data.velocity *= decay;\n  }\n  checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n  if (!particle.destroyed) {\n    data.value = clamp(data.value, minValue, maxValue);\n  }\n}\nexport function assertValidVersion(engine, pluginVersion) {\n  if (engine.version === pluginVersion) {\n    return;\n  }\n  throw new Error(\"The tsParticles version is different from the loaded plugins version. Engine version: \".concat(engine.version, \". Plugins version: \").concat(pluginVersion));\n}","map":{"version":3,"names":["clamp","collisionVelocity","getDistances","getRandom","getRangeMax","getRangeMin","getRangeValue","randomInRange","halfRandom","millisecondsToSeconds","percentDenominator","isArray","isObject","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","Vector","_logger","debug","console","error","info","log","verbose","warning","warn","setLogger","logger","getLogger","rectSideBounce","data","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","half","minVelocity","min","max","checkSelector","element","selectors","executeOnSingleOrMultiple","selector","matches","some","t","isSsr","window","document","hasMatchMedia","matchMedia","safeMatchMedia","query","safeIntersectionObserver","callback","IntersectionObserver","safeMutationObserver","MutationObserver","isInArray","value","array","invalidIndex","indexOf","loadFont","font","weight","fonts","load","concat","_unused","arrayRandomIndex","Math","floor","length","itemFromArray","index","useIndex","arguments","undefined","isPointInside","point","size","offset","radius","direction","minRadius","areBoundsInside","calculateBounds","bounds","inside","bottom","top","height","x","left","right","width","y","deepExtend","destination","_len","sources","Array","_key","source","sourceIsArray","key","sourceDict","destDict","map","v","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","enable","divModeExecute","div","divMode","divEnabled","singleDivModeExecute","circleBounceDataFromParticle","p","position","getPosition","getRadius","mass","getMass","create","options","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","sub","pos1","pos2","dx","xDist","dy","yDist","minimumDistance","angle","atan2","m1","m2","u1","rotate","u2","v1","v2","vFinal1","vFinal2","rectBounce","particle","divBounds","pPos","bounceOptions","resH","resV","obj","defaultIndex","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decayOffset","decay","increase","status","increasing","decrease","decreasing","random","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","canvasSize","isPercent","percent","_","rest","_objectWithoutProperties","_excluded","isPosition","getSize","checkDestroy","destroyType","minValue","maxValue","destroy","updateAnimation","changeDirection","delta","_data$maxLoops","_data$loops","_data$maxLoops2","_data$velocity","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minLoops","minDelay","identity","minDecay","destroyed","assertValidVersion","engine","pluginVersion","version","Error"],"sources":["/Users/abolfaz/Programming/ آموزش ها/projects/AFblog/node_modules/@tsparticles/engine/browser/Utils/Utils.js"],"sourcesContent":["import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { halfRandom, millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data, half = 0.5, minVelocity = 0;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function assertValidVersion(engine, pluginVersion) {\n    if (engine.version === pluginVersion) {\n        return;\n    }\n    throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${engine.version}. Plugins version: ${pluginVersion}`);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}